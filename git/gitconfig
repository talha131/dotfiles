[user]
	name = Talha Mansoor
	email = talha131@gmail.com
	signingkey = 561E6373A1B75589791E589D002B80DA805650B7
[core]
    quotepath = false
    whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
    excludesfile = /Users/talha/.gitignore
    trustctime = false
    pager = less -x1,5
	editor = nvim
	autocrlf = input
[color]
    ui = auto
[color "branch"]
    current = green
    local = magenta
    remote = yellow
[color "diff"]
    meta = yellow bold
    frag = magenta
    old = red
    new = green
    whitespace = white reverse
    commit = blue reverse
[color "status"]
    added = yellow
    changed = green
    untracked = cyan reverse
    branch = magenta
[push]
    default = simple
[alias]
    ap = add -p
    ai = add -i

    br = branch
    # All branches
    bra = branch -a
    # Merged branches
    brm = branch -a --merged
    # Clean merged branch
    brmcl = "!git branch --no-color --merged | grep -v master | grep -v next | xargs -I % sh -c 'git branch -d %; git push --delete origin %;'"
    # Unmerged branches
    bru = branch -a --no-merged
    brd = !sh -c 'git branch -D $1 && git push --delete origin $1' -
    brv = branch -vv
    branch-name = "!git rev-parse --abbrev-ref HEAD"
    pub = "!git push -u origin $(git branch-name)"

    c = commit -v
    ca = !git c -a
    caa = !git c -a --amend
    cm = !git c --amend

    # Short form
    ch = checkout
    # Swtich and create branch at branch or commit
    chb = checkout -b
    # Switch to master branch
    chm = checkout master
    chn = checkout next

    d = diff
    dc = diff --cached
    dw = diff --word-diff=color
    dcw = diff --cached --word-diff=color

    # One line logs
    l = "!source ~/.githelper && pretty_git_log_subject"
    # log with stats
    ls = "!source ~/.githelper && pretty_git_log_subject --stat"
    # Git log with graph
    lg = "!source ~/.githelper && pretty_git_log_subject --graph --topo-order"
    lb = "!source ~/.githelper && pretty_git_log_subject_body"
    lp = "!source ~/.githelper && pretty_git_log_subject_body_patch --patch"
    ln = "!source ~/.githelper && pretty_git_log_subject --name-only"

    # dry run merge
    msafe = "!source ~/.githelper && merge_conflicts_possible $1"
    # merge conflict
    mcon = "diff --name-only --diff-filter=U"
    mo = "!source ~/.githelper && merge_remote origin"
    mu = "!source ~/.githelper && merge_remote upstream"

    s = status --short --branch
    sb = status -sb
    sc = diff --name-only --diff-filter=U

    # Show files in a commit
    shf = diff-tree --no-commit-id --name-only -r 

    # Undo commit
    und = reset --soft HEAD~1
    # Unstage all changes
    uns = reset HEAD :/

[merge]
    conflictstyle = diff3
[diff]
	algorithm = patience
	compactionHeuristic = true
[pager]
	log = diff-highlight | less
	show = diff-highlight | less
	diff = diff-highlight | less
[interactive]
	diffFilter = diff-highlight
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[commit]
	gpgsign = true
